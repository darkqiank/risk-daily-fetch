networks:
    middleware-network:
        driver: bridge

services:
    postgresql:
        container_name: postgresql16
        deploy:
            resources:
                limits:
                    cpus: ${CPUS}
                    memory: ${MEMORY_LIMIT}
        environment:
            - POSTGRES_USER=${DB_ROOT_USER}
            - POSTGRES_PASSWORD=${DB_ROOT_PASSWORD}
        healthcheck:
            interval: 30s
            retries: 5
            start_period: 20s
            test:
                - CMD
                - pg_isready
                - -h
                - 127.0.0.1
                - -p
                - "5432"
                - -q
                - -U
                - ${DB_ROOT_USER}
            timeout: 5s
        image: postgres:16.3-bookworm
        labels:
            createdBy: Apps
        networks:
            - middleware-network
        ports:
            - ${HOST_IP}:${APP_PORT_HTTP}:5432
        restart: always
        volumes:
            - ./pg/data:/var/lib/postgresql/data
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    prefect-server:
        image: prefecthq/prefect:3.4.1-python3.12-conda
        environment:
            - PREFECT_API_URL=${PREFECT_API_URL}
            - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${DB_ROOT_USER}:${DB_ROOT_PASSWORD}@postgresql:5432/prefect
            - PREFECT_ORION_DATABASE_MIGRATE_ON_START=true
        depends_on:
            - postgresql
        ports:
            - 4200:4200
        networks:
            - middleware-network 
        command: ["prefect", "server", "start", "--host", "0.0.0.0"]
        volumes:
            - ./prefect-data:/root/.prefect